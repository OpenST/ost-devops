---

- name: Install App specific libs
  yum:
    name: "{{ item }}"
    state: present
  with_items:
  - java-1.8.0-openjdk

- name: Install PDI
  become_user: "{{ deploy_user }}"
  shell: |
    /bin/bash -lc '

    checkout_dir={{ checkout_dir }};
    data_int_home={{ pentaho.data_integration_home }};
    s3_bucket={{ devops_s3_bucket }};
    s3_region={{ aws_region }};

    zip_file=data-integration.zip
    cd ${checkout_dir}
    ls ${data_int_home} >> /dev/null 2>&1
    if [[ $? != 0 ]]; then
      aws s3 cp s3://${s3_bucket}/pentaho/${zip_file} . --quiet --region ${s3_region}
      if [[ $? != 0 ]]; then
        echo "Error downloading ${zip_file} file."
        exit 1
      fi
      unzip -q -o ${zip_file} -d ${data_int_home}
      rm -f ${zip_file}
    else
      echo "*** PDI is already installed ***"
    fi
    '
  register: out
- debug: var=out.stdout_lines

- name: Copy data-integration configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0755
  with_items:
    - {src: "{{ data_integration_log4j }}", dest: "{{ app_base_directory }}/data-integration/classes/log4j.xml"}

- name: Install Pentaho BI Server
  become_user: "{{ deploy_user }}"
  shell: |
    /bin/bash -lc '

    checkout_dir={{ checkout_dir }};
    bi_server_home={{ pentaho.bi_server_home }};
    s3_bucket={{ devops_s3_bucket }};
    s3_region={{ aws_region }};
    env={{ env }};

    cd ${checkout_dir}
    ls ${bi_server_home} >> /dev/null 2>&1
    if [[ $? != 0 ]]; then
      zip_file=pentaho-server-ce-8.2.0.0-342.zip
      aws s3 cp s3://${s3_bucket}/pentaho/${zip_file} . --quiet --region ${s3_region}
      if [[ $? != 0 ]]; then
        echo "Error downloading ${zip_file} file."
        exit 1
      fi
      mkdir -p ${bi_server_home}
      unzip -q -o ${zip_file}
      mv -f pentaho-server/* ${bi_server_home}/
      rm -rf pentaho-server ${zip_file}

      zip_file=saiku-plugin-p7.1-3.90.zip
      aws s3 cp s3://${s3_bucket}/pentaho/${zip_file} . --quiet --region ${s3_region}
      if [[ $? != 0 ]]; then
        echo "Error downloading ${zip_file} file."
        exit 1
      fi
      unzip -q -o ${zip_file} -d ${bi_server_home}/pentaho-solutions/system
      rm -f ${zip_file}

      file=pentaho_${env}_license.lic
      aws s3 cp s3://${s3_bucket}/pentaho/${file} . --quiet --region ${s3_region}
      if [[ $? != 0 ]]; then
        echo "Error downloading ${file} file."
        exit 1
      fi
      mv ${file} ${bi_server_home}/pentaho-solutions/system/saiku/license.lic
      rm -f ${file}
    else
      echo "*** Pentaho BI server is already installed ***"
    fi
    '
  register: out
  when: setupPentahoBIServer is defined and setupPentahoBIServer|bool
- debug: var=out.stdout_lines
  when: setupPentahoBIServer is defined and setupPentahoBIServer|bool

- name: Copy BI server configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0755
  with_items:
    - {src: "{{ server_xml_file }}", dest: "{{ pentaho.bi_server_home }}/tomcat/conf/server.xml"}
    - {src: "{{ server_properties_file }}", dest: "{{ pentaho.bi_server_home }}/pentaho-solutions/system/server.properties"}
    - {src: "{{ pentaho_xml_file }}", dest: "{{ pentaho.bi_server_home }}/pentaho-solutions/system/pentaho.xml"}
    - {src: "{{ pentaho_start_script }}", dest: "{{ pentaho.bi_server_home }}/start-pentaho.sh"}
    - {src: "{{ pentaho_server_log4j }}", dest: "{{ pentaho.bi_server_home }}/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml"}
    - {src: "{{ tomcat_logging_properties }}", dest: "{{ pentaho.bi_server_home }}/tomcat/conf/logging.properties"}
  when: setupPentahoBIServer is defined and setupPentahoBIServer|bool